{
    "openapi": "3.0.0",
    "info": {
        "title": "Docare API",
        "description": "API pour le syst√®me de gestion Docare",
        "version": "1.0.0"
    },
    "paths": {
        "/api/allergie": {
            "get": {
                "tags": [
                    "Allergie"
                ],
                "summary": "Get list of allergy",
                "description": "Returns list of allergy",
                "operationId": "getallergieList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "No allergy found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Allergie"
                ],
                "summary": "Create a new allergy",
                "description": "Creates a new allergy with the provided data",
                "operationId": "storeAllergie",
                "requestBody": {
                    "description": "Allergie data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "label": {
                                        "type": "string",
                                        "example": "Allergie label"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Allergie created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/allergie/{id}": {
            "get": {
                "tags": [
                    "Allergie"
                ],
                "summary": "Get a specific allergy by ID",
                "description": "Retrieves an allergy based on its ID",
                "operationId": "getAllergieById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the allergy to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Allergie not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Allergie"
                ],
                "summary": "Update an existing allergy",
                "description": "Updates an existing allergy with the provided data",
                "operationId": "updateAllergie",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the allergy to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Allergie data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "label": {
                                        "type": "string",
                                        "example": "Updated Allergie label"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Allergie updated successfully"
                    },
                    "404": {
                        "description": "Allergie not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Allergie"
                ],
                "summary": "Delete an existing allergy",
                "description": "Deletes an existing allergy by its ID",
                "operationId": "deleteAllergie",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the allergy to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Allergie deleted successfully"
                    },
                    "404": {
                        "description": "Allergie not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/consultations": {
            "get": {
                "tags": [
                    "Consultations"
                ],
                "summary": "Get list of consultations",
                "description": "Returns list of consultations",
                "operationId": "getConsultationsList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "No consultations found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Consultations"
                ],
                "summary": "Create a new consultation",
                "description": "Creates a new consultation",
                "operationId": "storeConsultation",
                "requestBody": {
                    "description": "Consultation data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "illness",
                                    "weight",
                                    "height",
                                    "pressure",
                                    "observations",
                                    "diagnostic",
                                    "description",
                                    "visit_price",
                                    "payment_status",
                                    "payment_date",
                                    "started_at",
                                    "ended_at",
                                    "consultation_type_id"
                                ],
                                "properties": {
                                    "illness": {
                                        "type": "string"
                                    },
                                    "weight": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "height": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "pressure": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "observations": {
                                        "type": "string"
                                    },
                                    "diagnostic": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "visit_price": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "payment_status": {
                                        "type": "boolean"
                                    },
                                    "payment_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "started_at": {
                                        "type": "string",
                                        "format": "time"
                                    },
                                    "ended_at": {
                                        "type": "string",
                                        "format": "time"
                                    },
                                    "consultation_type_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Consultation created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Consultation created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "field_name": [
                                                    "Error message"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while creating the consultation"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/consultations/{id}": {
            "get": {
                "tags": [
                    "Consultations"
                ],
                "summary": "Get a specific consultation",
                "description": "Returns details of a specific consultation",
                "operationId": "getConsultationById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the consultation to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Consultation found successfully"
                                        },
                                        "consultation": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "illness": {
                                                    "type": "string"
                                                },
                                                "weight": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "height": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "pressure": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "observations": {
                                                    "type": "string"
                                                },
                                                "diagnostic": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "visit_price": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "payment_status": {
                                                    "type": "boolean"
                                                },
                                                "payment_date": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "started_at": {
                                                    "type": "string",
                                                    "format": "time"
                                                },
                                                "ended_at": {
                                                    "type": "string",
                                                    "format": "time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Consultation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Consultation not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Consultations"
                ],
                "summary": "Update a consultation",
                "description": "Updates an existing consultation",
                "operationId": "updateConsultation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the consultation to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Consultation data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "illness",
                                    "weight",
                                    "height",
                                    "pressure",
                                    "observations",
                                    "diagnostic",
                                    "description",
                                    "visit_price",
                                    "payment_status",
                                    "payment_date",
                                    "started_at",
                                    "ended_at"
                                ],
                                "properties": {
                                    "illness": {
                                        "type": "string"
                                    },
                                    "weight": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "height": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "pressure": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "observations": {
                                        "type": "string"
                                    },
                                    "diagnostic": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "visit_price": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "payment_status": {
                                        "type": "boolean"
                                    },
                                    "payment_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "started_at": {
                                        "type": "string",
                                        "format": "time"
                                    },
                                    "ended_at": {
                                        "type": "string",
                                        "format": "time"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Consultation updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Consultation updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Consultation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Consultation not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "field_name": [
                                                    "Error message"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while updating the consultation"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Consultations"
                ],
                "summary": "Delete a consultation",
                "description": "Deletes a specific consultation",
                "operationId": "deleteConsultation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the consultation to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Consultation deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Consultation deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Consultation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Consultation not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while deleting the consultation"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/consultationType": {
            "get": {
                "tags": [
                    "ConsultationsType"
                ],
                "summary": "Get list of consultations type",
                "description": "Returns list of consultations type",
                "operationId": "getConsultationsTypeList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "No consultations found"
                    }
                }
            },
            "post": {
                "tags": [
                    "ConsultationsType"
                ],
                "summary": "Store a new consultation type",
                "description": "Stores a new consultation type",
                "operationId": "storeConsultationType",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "label"
                                ],
                                "properties": {
                                    "label": {
                                        "type": "string",
                                        "example": "Example Label"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Consultation type created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Consultation type created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "label": [
                                                    "The label field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/consultationType/{id}": {
            "get": {
                "tags": [
                    "ConsultationsType"
                ],
                "summary": "Get a specific consultation Type",
                "description": "Returns details of a specific consultation Type",
                "operationId": "getConsultationTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the consultation Type to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Consultation Type found successfully"
                                        },
                                        "consultationType": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "label": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Consultation type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Consultation Type not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ConsultationsType"
                ],
                "summary": "Update a specific consultation Type",
                "description": "Update details of a specific consultation Type",
                "operationId": "updateConsultationType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the consultation Type to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "label"
                                ],
                                "properties": {
                                    "label": {
                                        "type": "string",
                                        "example": "Updated Label"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Consultation Type updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Consultation Type updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Consultation Type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Consultation Type not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "label": [
                                                    "The label field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ConsultationsType"
                ],
                "summary": "Delete a specific consultation Type",
                "description": "Deletes a specific consultation Type",
                "operationId": "deleteConsultationType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the consultation Type to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Consultation Type deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 204
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Consultation Type deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Consultation Type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Consultation Type not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/documents": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Get list of documents",
                "description": "Returns list of documents",
                "operationId": "getDocumentsList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "No documents found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Create a new document",
                "description": "Create a new document with the provided data",
                "operationId": "storeDocument",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "label",
                                    "path"
                                ],
                                "properties": {
                                    "label": {
                                        "type": "string",
                                        "example": "Document Label"
                                    },
                                    "path": {
                                        "type": "string",
                                        "example": "path/to/document.pdf"
                                    },
                                    "document_type_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "patient_record_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "consultation_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "created_by": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Document created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/documents/{id}": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Get a specific document by ID",
                "description": "Returns the document with the specified ID",
                "operationId": "showDocumentById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the document to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Document not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Documents"
                ],
                "summary": "Update an existing document",
                "description": "Update the specified document",
                "operationId": "updateDocument",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the document to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated document object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "label": {
                                        "type": "string",
                                        "example": "Updated Label"
                                    },
                                    "path": {
                                        "type": "string",
                                        "example": "/updated/path/to/document.pdf"
                                    },
                                    "document_type_id": {
                                        "type": "numeric",
                                        "example": "2"
                                    },
                                    "patient_record_id": {
                                        "type": "numeric",
                                        "example": "3"
                                    },
                                    "consultation_id": {
                                        "type": "numeric",
                                        "example": "3"
                                    },
                                    "created_by": {
                                        "type": "numeric",
                                        "example": "3"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Document not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Documents"
                ],
                "summary": "Delete a document",
                "description": "Deletes a document by its ID",
                "operationId": "deleteDocument",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the document to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document deleted successfully"
                    },
                    "404": {
                        "description": "Document not found"
                    }
                }
            }
        },
        "/api/prescriptions_by_patient/{patientId}": {
            "get": {
                "tags": [
                    "Prescriptions By Patient"
                ],
                "summary": "Get prescriptions by patient ID",
                "description": "Retrieves prescriptions associated with a patient by their ID",
                "operationId": "getPrescriptionsByPatientId",
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "ID of the patient",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Prescriptions found"
                    },
                    "404": {
                        "description": "Prescriptions not found"
                    }
                }
            }
        },
        "/api/prescriptions_by_patientrecord/{patientRecordId}": {
            "get": {
                "tags": [
                    "Prescriptions By Patient Record"
                ],
                "summary": "Get prescriptions by patient record",
                "description": "Retrieves prescriptions associated with a patient record ",
                "operationId": "getPrescriptionsByPatientRecord",
                "parameters": [
                    {
                        "name": "patientRecordId",
                        "in": "path",
                        "description": "ID of the patient record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Prescriptions found"
                    },
                    "404": {
                        "description": "Prescriptions not found"
                    }
                }
            }
        },
        "/api/document_types": {
            "get": {
                "tags": [
                    "Document Types"
                ],
                "summary": "Get list of document types",
                "description": "Returns list of document types",
                "operationId": "getDocumenttypesList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "No document types found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Document Types"
                ],
                "summary": "Store a new document type",
                "description": "Creates a new document type with the provided label.",
                "operationId": "storeDocumentType",
                "requestBody": {
                    "description": "Document type object to be stored",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "label"
                                ],
                                "properties": {
                                    "label": {
                                        "description": "Label of the document type",
                                        "type": "string",
                                        "enum": [
                                            "Certificate",
                                            "Prescription",
                                            "IRM",
                                            "Radio",
                                            "Analysis",
                                            "Note"
                                        ],
                                        "example": "Certificate"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Document type created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/document_types/{id}": {
            "get": {
                "tags": [
                    "Document Types"
                ],
                "summary": "Get a specific document type by ID",
                "description": "Returns the document type with the specified ID",
                "operationId": "showDocumentType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the document type to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Document type not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Document Types"
                ],
                "summary": "Update an existing document type",
                "description": "Updates an existing document type with the provided label.",
                "operationId": "updateDocumentType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the document type to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Document type object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "label"
                                ],
                                "properties": {
                                    "label": {
                                        "description": "Label of the document type",
                                        "type": "string",
                                        "enum": [
                                            "Certificate",
                                            "Prescription",
                                            "IRM",
                                            "Radio",
                                            "Analysis",
                                            "Note"
                                        ],
                                        "example": "Certificate"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Document type updated successfully"
                    },
                    "404": {
                        "description": "Document type not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Document Types"
                ],
                "summary": "Delete a document type",
                "description": "Deletes a document type by its ID",
                "operationId": "deleteDocumentType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the document type to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document type deleted successfully"
                    },
                    "404": {
                        "description": "Document type not found"
                    }
                }
            }
        },
        "/api/patientRecordAllergie": {
            "get": {
                "tags": [
                    "Patient Record Allergies"
                ],
                "summary": "Get list of patient record allergies",
                "description": "Returns list of patient record allergies",
                "operationId": "getPatientRecordAllergiesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "patient_record_allergies": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "allergie_id": {
                                                        "type": "integer"
                                                    },
                                                    "patient_record_id": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No patient record allergies found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No patient record allergies found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Patient Record Allergies"
                ],
                "summary": "Create a new patient record allergy",
                "description": "Creates a new patient record allergy",
                "operationId": "storePatientRecordAllergie",
                "requestBody": {
                    "description": "Patient record allergy data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "allergie_id",
                                    "patient_record_id"
                                ],
                                "properties": {
                                    "allergie_id": {
                                        "type": "integer"
                                    },
                                    "patient_record_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Patient record allergy created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Patient record allergy created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "field_name": [
                                                    "Error message"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Patient record allergy already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 409
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Patient record allergy already exists"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while creating the patient record allergy"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/patientRecordAllergie/{id}": {
            "get": {
                "tags": [
                    "Patient Record Allergies"
                ],
                "summary": "Get a specific patient record allergy",
                "description": "Returns details of a specific patient record allergy",
                "operationId": "getPatientRecordAllergieById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the patient record allergy to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "patient_record_allergie": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "allergie_id": {
                                                    "type": "integer"
                                                },
                                                "patient_record_id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient record allergy not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Patient record allergy not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Patient Record Allergies"
                ],
                "summary": "Update an existing patient record allergy",
                "description": "Updates an existing patient record allergy",
                "operationId": "updatePatientRecordAllergie",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the patient record allergy to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Patient record allergy data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "allergie_id": {
                                        "type": "integer"
                                    },
                                    "patient_record_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patient record allergy updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Patient record allergy updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient record allergy not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Patient record allergy not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "field_name": [
                                                    "Error message"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while updating the patient record allergy"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Patient Record Allergies"
                ],
                "summary": "Delete a patient record allergy",
                "description": "Deletes a patient record allergy",
                "operationId": "deletePatientRecordAllergie",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the patient record allergy to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Patient record allergy deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 204
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Patient record allergy deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient record allergy not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Patient record allergy not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/patientRecords": {
            "get": {
                "tags": [
                    "Patient Records"
                ],
                "summary": "Get list of patient records",
                "description": "Returns list of patient records",
                "operationId": "getPatientRecordsList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "No patient records found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Patient Records"
                ],
                "summary": "Create a new patient record",
                "description": "Creates a new patient record",
                "operationId": "storePatientRecord",
                "requestBody": {
                    "description": "Patient record data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "numero",
                                    "description",
                                    "created_by",
                                    "patient_id",
                                    "doctor_id"
                                ],
                                "properties": {
                                    "numero": {
                                        "type": "integer"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "integer"
                                    },
                                    "patient_id": {
                                        "type": "integer"
                                    },
                                    "doctor_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Patient record created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Patient record created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "field_name": [
                                                    "Error message"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while creating the patient record"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/patientRecords/{id}": {
            "get": {
                "tags": [
                    "Patient Records"
                ],
                "summary": "Get a specific patient record",
                "description": "Returns details of a specific patient record",
                "operationId": "getPatientRecordById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the patient record to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Patient record found successfully"
                                        },
                                        "patient_record": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "numero": {
                                                    "type": "integer"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "created_by": {
                                                    "type": "integer"
                                                },
                                                "patient_id": {
                                                    "type": "integer"
                                                },
                                                "doctor_id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Patient record not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Patient Records"
                ],
                "summary": "Update a patient record",
                "description": "Updates an existing patient record",
                "operationId": "updatePatientRecord",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the patient record to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Patient record data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "numero",
                                    "description",
                                    "patient_id",
                                    "doctor_id"
                                ],
                                "properties": {
                                    "numero": {
                                        "type": "integer"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "patient_id": {
                                        "type": "integer"
                                    },
                                    "doctor_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patient record updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Patient record updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Patient record not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "field_name": [
                                                    "Error message"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while updating the patient record"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Patient Records"
                ],
                "summary": "Delete a patient record",
                "description": "Deletes a specific patient record",
                "operationId": "deletePatientRecord",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the patient record to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Patient record deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 204
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Patient record deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Patient record not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/patientRecords/{id}/consultations": {
            "get": {
                "tags": [
                    " Get Consultations By Patient Records "
                ],
                "summary": "Get all consultations associated with a specific patient record",
                "description": "Returns all consultations associated with a specific patient record",
                "operationId": "getConsultations",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the patient record",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation. Returns the consultations associated with the specified patient record.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "consultations": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date"
                                                    },
                                                    "doctor_id": {
                                                        "type": "integer"
                                                    },
                                                    "patient_id": {
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient record not found. Indicates that no patient record matching the specified ID was found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Patient record not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/prescription_line": {
            "get": {
                "tags": [
                    "Prescription Line"
                ],
                "summary": "Get list of prescription_line",
                "description": "Returns list of prescription_line",
                "operationId": "getPrescription_lineList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "No prescription line found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Prescription Line"
                ],
                "summary": "Create a new prescription line",
                "description": "Creates a new prescription line with the provided details.",
                "operationId": "storePrescriptionLine",
                "requestBody": {
                    "description": "Prescription line object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "medcine_name",
                                    "dosage",
                                    "document_id"
                                ],
                                "properties": {
                                    "medcine_name": {
                                        "description": "Name of the medicine",
                                        "type": "string",
                                        "example": "Medicine A"
                                    },
                                    "dosage": {
                                        "description": "Dosage of the medicine",
                                        "type": "string",
                                        "example": "2 tablets per day"
                                    },
                                    "document_id": {
                                        "description": "ID of the document associated with the prescription line",
                                        "type": "integer",
                                        "example": 123
                                    },
                                    "times": {
                                        "description": "Times per day (optional)",
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Prescription line created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/prescription_line/{id}": {
            "get": {
                "tags": [
                    "Prescription Line"
                ],
                "summary": "Get a specific Prescription_line type by ID",
                "description": "Returns the Prescription_line with the specified ID",
                "operationId": "showPrescriptionLine",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Prescription_line to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Prescription_line not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Prescription Line"
                ],
                "summary": "Update a prescription line",
                "description": "Updates an existing prescription line with the provided details.",
                "operationId": "updatePrescriptionLine",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the prescription line to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Prescription line object data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "medcine_name",
                                    "dosage"
                                ],
                                "properties": {
                                    "medcine_name": {
                                        "description": "Name of the medicine",
                                        "type": "string",
                                        "example": "Medicine A"
                                    },
                                    "dosage": {
                                        "description": "Dosage of the medicine",
                                        "type": "string",
                                        "example": "2 tablets per day"
                                    },
                                    "document_id": {
                                        "description": "ID of the document associated with the prescription line (optional)",
                                        "type": "integer",
                                        "example": 123
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Prescription line updated successfully"
                    },
                    "404": {
                        "description": "Prescription line not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Prescription Line"
                ],
                "summary": "delete a prescription line",
                "description": "deletes an existing prescription line with the provided details.",
                "operationId": "deletePrescriptionLine",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the prescription line to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "prescription line deleted successfully"
                    },
                    "404": {
                        "description": "prescription line not found"
                    }
                }
            }
        },
        "/api/sharedDocuemnt": {
            "get": {
                "tags": [
                    "Shared Document"
                ],
                "summary": "Get list of sharedDocuemnt",
                "description": "Returns list of sharedDocuemnt",
                "operationId": "getsharedDocuemntList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "No sharedDocuemnt found"
                    }
                }
            }
        },
        "/api/sharedDocument": {
            "post": {
                "tags": [
                    "Shared Document"
                ],
                "summary": "Store a new shared document",
                "description": "Creates a new shared document record",
                "operationId": "storeSharedDocument",
                "requestBody": {
                    "description": "Data for creating a new shared document",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "privilege",
                                    "doctor_id",
                                    "document_id"
                                ],
                                "properties": {
                                    "privilege": {
                                        "description": "Privilege level",
                                        "type": "string",
                                        "enum": [
                                            "-",
                                            "r",
                                            "w",
                                            "rw"
                                        ]
                                    },
                                    "doctor_id": {
                                        "description": "ID of the doctor",
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "document_id": {
                                        "description": "ID of the document",
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Shared document created successfully"
                    },
                    "409": {
                        "description": "Shared document already exists"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/sharedDocument/{id}": {
            "get": {
                "tags": [
                    "Shared Document"
                ],
                "summary": "Get shared document by ID",
                "description": "Retrieves a shared document by its ID",
                "operationId": "getSharedDocumentById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the shared document",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shared document found"
                    },
                    "404": {
                        "description": "Shared document not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Shared Document"
                ],
                "summary": "Update shared document by ID",
                "description": "Updates a shared document by its ID",
                "operationId": "updateSharedDocumentById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the shared document",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated shared document data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "privilege": {
                                        "description": "Updated privilege",
                                        "type": "string",
                                        "enum": [
                                            "r",
                                            "w",
                                            "rw"
                                        ]
                                    },
                                    "doctor_id": {
                                        "description": "Doctor ID",
                                        "type": "integer",
                                        "example": 123
                                    },
                                    "document_id": {
                                        "description": "Document ID",
                                        "type": "integer",
                                        "example": 456
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Shared document updated successfully"
                    },
                    "404": {
                        "description": "Shared document not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Shared Document"
                ],
                "summary": "Delete shared document by ID",
                "description": "Deletes a shared document by its ID",
                "operationId": "deleteSharedDocumentById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the shared document",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shared document deleted successfully"
                    },
                    "404": {
                        "description": "Shared document not found"
                    }
                }
            }
        },
        "/api/waitingRoom": {
            "get": {
                "tags": [
                    "Waiting Rooms"
                ],
                "summary": "Get list of waiting rooms",
                "description": "Returns list of waiting rooms",
                "operationId": "getWaitingRoomsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "waiting_rooms": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "arrival_date": {
                                                        "type": "string",
                                                        "format": "date"
                                                    },
                                                    "departure_date": {
                                                        "type": "string",
                                                        "format": "date"
                                                    },
                                                    "doctor_id": {
                                                        "type": "integer"
                                                    },
                                                    "patient_id": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No waiting rooms found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No waiting rooms found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Waiting Rooms"
                ],
                "summary": "Create a new waiting room",
                "description": "Creates a new waiting room",
                "operationId": "storeWaitingRoom",
                "requestBody": {
                    "description": "Waiting room data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "arrival_date",
                                    "doctor_id",
                                    "patient_id"
                                ],
                                "properties": {
                                    "arrival_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "departure_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "doctor_id": {
                                        "type": "integer"
                                    },
                                    "patient_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Waiting room created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Waiting room created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "field_name": [
                                                    "Error message"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while creating the waiting room"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/waitingRoom/{id}": {
            "get": {
                "tags": [
                    "Waiting Rooms"
                ],
                "summary": "Get a specific waiting room",
                "description": "Returns details of a specific waiting room",
                "operationId": "getWaitingRoomById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the waiting room to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Waiting room found successfully"
                                        },
                                        "waiting_room": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "arrival_date": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "departure_date": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "doctor_id": {
                                                    "type": "integer"
                                                },
                                                "patient_id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Waiting room not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Waiting room not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Waiting Rooms"
                ],
                "summary": "Update an existing waiting room",
                "description": "Updates an existing waiting room",
                "operationId": "updateWaitingRoom",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the waiting room to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Waiting room data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "arrival_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "departure_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "doctor_id": {
                                        "type": "integer"
                                    },
                                    "patient_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Waiting room updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Waiting room updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Waiting room not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Waiting room not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "field_name": [
                                                    "Error message"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while updating the waiting room"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Waiting Rooms"
                ],
                "summary": "Delete a waiting room",
                "description": "Deletes a waiting room",
                "operationId": "deleteWaitingRoom",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the waiting room to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Waiting room deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Waiting room deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Waiting room not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Waiting room not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}